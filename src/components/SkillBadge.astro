---
interface Props {
  name: string;
  level?: number; // 1-5 donde 5 es el nivel mÃ¡ximo
  color?: 'primary' | 'accent' | 'gray';
  icon?: string;
}

const { 
  name, 
  level = 3, 
  color = 'primary',
  icon
} = Astro.props;

const bgColor = {
  primary: 'bg-primary/10 text-primary',
  accent: 'bg-accent/10 text-accent',
  gray: 'bg-gray-100 text-gray-800'
}[color];

const levelDots = Array(5).fill(null).map((_, i) => i < level);
---

<div class={`flex items-center gap-3 px-4 py-2 rounded-lg ${bgColor}`}>
  {icon && (
    <span class="text-lg" set:html={icon}></span>
  )}
  <div class="flex-1">
    <span class="font-medium">{name}</span>
  </div>
  <div class="flex items-center gap-1">
    {levelDots.map((isActive) => (
      <div class={`w-1.5 h-1.5 rounded-full ${isActive ? (color === 'primary' ? 'bg-primary' : color === 'accent' ? 'bg-accent' : 'bg-gray-500') : 'bg-gray-200'}`}></div>
    ))}
  </div>
</div> 